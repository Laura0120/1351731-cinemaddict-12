{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/const.js","webpack:///./src/main.js","webpack:///./src/mock/const.js","webpack:///./src/mock/film.js","webpack:///./src/mock/filter.js","webpack:///./src/model/film-cards.js","webpack:///./src/presenter/film.js","webpack:///./src/presenter/movie-list.js","webpack:///./src/utils/common.js","webpack:///./src/utils/film-card.js","webpack:///./src/utils/observer.js","webpack:///./src/utils/render.js","webpack:///./src/view/abstract.js","webpack:///./src/view/container.js","webpack:///./src/view/film.js","webpack:///./src/view/filter.js","webpack:///./src/view/footer-statistics.js","webpack:///./src/view/popup.js","webpack:///./src/view/profile.js","webpack:///./src/view/show-more.js","webpack:///./src/view/smart.js","webpack:///./src/view/sort.js"],"names":[],"mappings":"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nB,gEAAgE,gEAAY;AAC5E;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,oDAAU;AACrB;AACA;AACA,WAAW,oDAAU;AACrB;AACA;AACA;AACA,WAAW,oDAAU;AACrB,qCAAqC,wDAAwD;AAC7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,mCAAmC;AACpE;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B,qDAAQ;AACtC;;AAEA,IAAI,+DAAM,uCAAuC,+DAAc;AAC/D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,+DAAM;AACZ;AACA;;AAEA;AACA,kCAAkC,gDAAiB;AACnD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,0DAAkB;AAC1D;;AAEA,IAAI,+DAAM,2CAA2C,+DAAc;AACnE;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,4DAA4D,KAAK;AACzF;;AAEA;AACA;;AAEA,IAAI,+DAAM;AACV;AACA,IAAI,+DAAM;;AAEV;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,kDAAQ;AACtC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChMA;AAAA;AAAO;AACP;AACA;;AAEA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;AAEpC;AACP;AACA;AACA;;AAEO;AACP,uBAAuB,yDAAQ;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,2BAA2B,yDAAQ;AACnC;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEO;AACP,0BAA0B,yDAAQ;AAClC;AACA;;AAEA,0BAA0B,yDAAQ;AAClC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP,6BAA6B,yDAAQ;AACrC;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAiD;;AAElC;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,sEAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,+BAA+B,oDAAY;AAC1D;AACA;AACA;AACA;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAyC;;AAEzC;;AAEA;AACA,SAAS,kEAAkE;AAC3E;AACA,mCAAmC,KAAK;AACxC,mCAAmC,OAAO;AAC1C;AACA,sCAAsC,4BAA4B;AAClE,0CAA0C,QAAQ;AAClD,uCAAuC,MAAM;AAC7C;AACA,eAAe,OAAO;AACtB,wCAAwC,gGAAgG;AACxI,qCAAqC,gBAAgB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uBAAuB,oDAAY;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAyC;;AAEzC;AACA,SAAS,YAAY;AACrB,sBAAsB,KAAK,kCAAkC,KAAK,4CAA4C,MAAM;AACpH;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEe,qBAAqB,oDAAY;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAyC;;AAEzC,qDAAqD,WAAW;;AAEjD,+BAA+B,oDAAY;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,SAAS,8BAA8B;AACvC;AACA,mCAAmC,YAAY;AAC/C,mCAAmC,iBAAiB;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,0CAA0C;AAC7E,mCAAmC,gEAAgE,QAAQ,mBAAmB;AAC9H;AACA;;AAEA;AACA,SAAS,wBAAwB;AACjC;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,4CAA4C,KAAK;AACjD;AACA,mDAAmD,MAAM;AACzD,gDAAgD,IAAI;AACpD;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,mFAAmF;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;;AAElE,6CAA6C,UAAU;AACvD;;AAEA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD,sEAAsE,aAAa;AACnF;;AAEA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA,gBAAgB,iD;AAChB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,2GAA2G,gBAAgB;;AAE3H;AACA,cAAc;AACd;;AAEA;AACA;AACA,gBAAgB,iDAAiD,MAAM;AACvE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oBAAoB,iDAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxNA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;;AAEe,0BAA0B,oDAAY;AACrD;AACA;AACA;AACA;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAyC;;AAEzC;;AAEe,6BAA6B,oDAAY;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAyC;;AAE1B,oBAAoB,oDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAyC;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,oDAAY;AAC9C;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","export const UpdateType = {\n  PATCH: `PATCH`,\n  MINOR: `MINOR`,\n  MAJOR: `MAJOR`,\n};\n\nexport const SortType = {\n  DEFAULT: `default`,\n  DATE: `date`,\n  RITING: `rating`,\n};\n","import UserProfile from \"./view/profile.js\";\nimport FilterView from \"./view/filter.js\";\nimport SortView from \"./view/sort.js\";\nimport MovieListPresenter from \"./presenter/movie-list.js\";\nimport FooterStatisticsView from \"./view/footer-statistics.js\";\nimport FilmCardsModel from \"./model/film-cards.js\";\nimport { render, RenderPosition } from \"./utils/render.js\";\nimport { generateFilmCard } from \"./mock/film\";\nimport { generateFilter } from \"./mock/filter\";\n\nconst FILM_CARD_COUNT = 15;\n\nconst filmCards = new Array(FILM_CARD_COUNT).fill().map(generateFilmCard);\nconst filters = generateFilter(filmCards);\n\nconst filmCardsModel = new FilmCardsModel();\nfilmCardsModel.setFilmCards(filmCards);\n\nconst bodyElement = document.querySelector(`body`);\nconst siteHeaderElement = bodyElement.querySelector(`.header`);\nconst siteMainElement = bodyElement.querySelector(`.main`);\nconst footerStatisticsElement = bodyElement.querySelector(`.footer__statistics`);\nconst movieListPresenter = new MovieListPresenter(siteMainElement, filmCardsModel);\n\nrender(siteHeaderElement, new UserProfile(), RenderPosition.BEFORE_END);\nrender(siteMainElement, new FilterView(filters), RenderPosition.BEFORE_END);\nrender(siteMainElement, new SortView(), RenderPosition.BEFORE_END);\nmovieListPresenter.init();\nrender(footerStatisticsElement, new FooterStatisticsView(FILM_CARD_COUNT), RenderPosition.AFTER_BEGIN);\n","export const NAMES_FILM = [\n  `The Dance of Life`,\n  `Sagebrush Trail`,\n  `The Man with the Golden Arm`,\n  `Santa Claus Conquers the Martians`,\n  `Popeye the Sailor Meets Sindbad the Sailor`,\n];\n\nexport const POSTARS = [\n  `images/posters/made-for-each-other.png`,\n  `images/posters/popeye-meets-sinbad.png`,\n  `images/posters/sagebrush-trail.jpg`,\n  `images/posters/santa-claus-conquers-the-martians.jpg`,\n  `images/posters/the-dance-of-life.jpg`,\n  `images/posters/the-great-flamarion.jpg`,\n  `images/posters/the-man-with-the-golden-arm.jpg`,\n];\n\nconst description = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc fermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus`;\nexport const DESCRIPTIONS = description.split(`.`);\n\nexport const COMMENTS_EMOJI = [`images/emoji/angry.png`, `images/emoji/puke.png`, `images/emoji/sleeping.png`, `images/emoji/smile.png`];\n\nexport const COMMENTS_TEXT = [\n  `Interesting setting and a good cast`,\n  `Booooooooooring`,\n  `Very very old. Meh`,\n  `Almost two hours? Seriously?`,\n];\n\nexport const COMMENTS_AUTOR = [`Tim Macoveev`, `John Doe`];\nexport const COMMENTS_DATE = [`2019/12/31 23:59`, `2 days ago`, `Today`];\nexport const DATE_OF_RELEASE = [`01 April 1995`, `01 April 1929`, `01 April 1933`, `01 April 1955`, `01 April 1964`];\nexport const RATING = [`8.3`, `3.2`, `9.0`, `2.3`, `6.3`];\nexport const DURATION = [`1h 55m`, `54m`, `1h 59m`, `1h 21m`, `1h 16m`];\nexport const GENRE = [`Musical`, `Western`, `Drama`, `Comedy`, `Cartoon`];\nexport const DIRECTOR = [`Quentin Tarantino`, `Wes Anderson`, `Christopher Nolan`, `Denis Villeneuve`, `Martin Scorsese`];\nexport const WRITERS = [`Billy Wilder`, `Robert Townen`, `Francis Ford Coppola`, `William Goldman`, `Charlie Kaufman`];\nexport const COUNTRY = [`USA`, `Germany`, `Italy`, `France`];\nexport const AGE_REATING = [0, 6, 12, 16, 18];\n\nexport const ACTOR = [\n  `Marilyn Monroe`,\n  `Will Smith`,\n  `Johnny Depp`,\n  `Robert Downey Jr.`,\n  `Angelina Jolie`,\n  `Charlie Chaplin`,\n  `Lisa Kudrow`,\n  `David Hasselhoff`,\n  `Dirk Benedict`,\n  `Ruby Rose`,\n  `Ruby Rose`,\n  `Jane Russell`,\n  `Russell Crowe`,\n];\n","import {getRandomInteger} from \"../utils/common\";\nimport {\n  POSTARS,\n  NAMES_FILM,\n  DESCRIPTIONS,\n  COMMENTS_EMOJI,\n  COMMENTS_TEXT,\n  COMMENTS_AUTOR,\n  COMMENTS_DATE,\n  DATE_OF_RELEASE,\n  RATING,\n  DURATION,\n  GENRE,\n  DIRECTOR,\n  WRITERS,\n  COUNTRY,\n  AGE_REATING,\n  ACTOR,\n} from \"./const\";\nlet id = Date.now();\nconst generateId = () => {\n  id += 1;\n  return id;\n};\n\nconst generateRandomLengthString = (array, maxValue, separator) => {\n  const stringLength = getRandomInteger(1, maxValue);\n  const string =\n    new Array(stringLength)\n      .fill()\n      .map(() => array[getRandomInteger(0, array.length - 1)])\n      .join(separator) + `.`;\n  return string;\n};\n\nconst generateComments = () => {\n  const commentsCount = getRandomInteger(0, 5);\n  const comments = [];\n  for (let i = 0; i < commentsCount; i++) {\n    const comment = {\n      emoji: `../../${COMMENTS_EMOJI[getRandomInteger(0, COMMENTS_EMOJI.length - 1)]}`,\n      day: COMMENTS_DATE[getRandomInteger(0, COMMENTS_DATE.length - 1)],\n      autor: COMMENTS_AUTOR[getRandomInteger(0, COMMENTS_AUTOR.length - 1)],\n      text: COMMENTS_TEXT[getRandomInteger(0, COMMENTS_TEXT.length - 1)],\n    };\n    comments.push(comment);\n  }\n  return comments;\n};\n\nexport const generateFilmCard = () => {\n  return {\n    id: generateId(),\n    poster: `../../${POSTARS[getRandomInteger(0, POSTARS.length - 1)]}`,\n    name: NAMES_FILM[getRandomInteger(0, NAMES_FILM.length - 1)],\n    originalName: NAMES_FILM[getRandomInteger(0, NAMES_FILM.length - 1)],\n    rating: RATING[getRandomInteger(0, RATING.length - 1)],\n    Director: DIRECTOR[getRandomInteger(0, DIRECTOR.length - 1)],\n    Writers: WRITERS[getRandomInteger(0, WRITERS.length - 1)],\n    Actors: generateRandomLengthString(ACTOR, 3, `, `),\n    date: DATE_OF_RELEASE[getRandomInteger(0, DATE_OF_RELEASE.length - 1)],\n    Runtime: DURATION[getRandomInteger(0, DURATION.length - 1)],\n    Country: COUNTRY[getRandomInteger(0, COUNTRY.length - 1)],\n    genre: GENRE[getRandomInteger(0, GENRE.length - 1)],\n    description: generateRandomLengthString(DESCRIPTIONS, 5, `. `),\n    comments: generateComments(),\n    isWatchlist: Boolean(getRandomInteger(0, 1)),\n    isWatched: Boolean(getRandomInteger(0, 1)),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    ageRating: AGE_REATING[getRandomInteger(0, AGE_REATING.length - 1)] + `+`,\n    emoji: null,\n  };\n};\n","const getWatchList = (filmCards) => filmCards.filter((filmCard) => filmCard.isWatchlist).length;\nconst getHistory = (filmCards) => filmCards.filter((filmCard) => filmCard.isHistory).length;\nconst getFavorites = (filmCards) => filmCards.filter((filmCard) => filmCard.isFavorites).length;\n\nexport const generateFilter = (filmCards) => {\n  const filterFilmCards = {\n    Watchlist: getWatchList(filmCards),\n    History: getHistory(filmCards),\n    Favorites: getFavorites(filmCards),\n  };\n\n  return Object.entries(filterFilmCards).map(([filterName, countFilms]) => {\n    return {\n      name: filterName,\n      count: countFilms,\n    };\n  });\n};\n","import Observer from \"../utils/observer.js\";\nimport { UpdateType } from \"../const\";\n\nexport default class FilmCards extends Observer {\n  constructor() {\n    super();\n    this._filmCards = [];\n  }\n\n  setFilmCards(filmCards) {\n    this._filmCards = filmCards.slice();\n  }\n\n  getFilmCards() {\n    return this._filmCards;\n  }\n\n  updateFilmCards(updatedFilmCard) {\n    const index = this._filmCards.findIndex((filmCard) => filmCard.id === updatedFilmCard.id);\n\n    if (index === -1) {\n      throw new Error(`Can't update unexisting task`);\n    }\n\n    this._filmCards = [...this._filmCards.slice(0, index), updatedFilmCard, ...this._filmCards.slice(index + 1)];\n\n    this._notify({ payload: updatedFilmCard });\n  }\n}\n","import FilmCardView from \"../view/film.js\";\nimport PopupView from \"../view/popup.js\";\nimport { render, RenderPosition, replace, remove } from \"../utils/render.js\";\n\nconst ViewType = {\n  DEFAULT: `DEFAULT`,\n  POPUP: `POPUP`,\n};\nconst bodyElement = document.querySelector(`body`);\n\nexport default class FilmCard {\n  constructor(filmListContainer, changeData, changeViewType) {\n    this._filmListContainer = filmListContainer;\n    this._changeData = changeData;\n    this._changeViewType = changeViewType;\n\n    this._filmCardComponent = null;\n    this._popupComponent = null;\n    this._viewType = ViewType.DEFAULT;\n\n    this._handlePopupClick = this._handlePopupClick.bind(this);\n    this._closeHandler = this._closeHandler.bind(this);\n    this._handleFavoriteClick = this._handleFavoriteClick.bind(this);\n    this._handleWatchlistClick = this._handleWatchlistClick.bind(this);\n    this._handleWatchedClick = this._handleWatchedClick.bind(this);\n  }\n\n  init(filmCard) {\n    this._filmCard = filmCard;\n\n    const prevfilmCardComponent = this._filmCardComponent;\n    const prevPopupComponent = this._popupComponent;\n\n    this._filmCardComponent = new FilmCardView(filmCard);\n    this._filmCardComponent.setPopupClickHandler(this._handlePopupClick);\n    this._filmCardComponent.clickHandler(this._handleFavoriteClick, `.film-card__controls-item--favorite`);\n    this._filmCardComponent.clickHandler(this._handleWatchlistClick, `.film-card__controls-item--add-to-watchlist`);\n    this._filmCardComponent.clickHandler(this._handleWatchedClick, `.film-card__controls-item--mark-as-watched`);\n\n    this._popupComponent = new PopupView(filmCard, this._changeData);\n    this._popupComponent.setFavoriteClickHandler(this._handleFavoriteClick);\n    this._popupComponent.setWatchlistClickHandler(this._handleWatchlistClick);\n    this._popupComponent.setWatchedClickHandler(this._handleWatchedClick);\n    this._popupComponent.setCloseClickHandler(this._closeHandler);\n\n    if (prevfilmCardComponent === null || prevPopupComponent === null) {\n      render(this._filmListContainer, this._filmCardComponent, RenderPosition.BEFORE_END);\n      return;\n    }\n    replace(this._filmCardComponent, prevfilmCardComponent);\n    replace(this._popupComponent, prevPopupComponent);\n    remove(prevfilmCardComponent);\n    remove(prevPopupComponent);\n  }\n\n  destroy() {\n    remove(this._filmCardComponent);\n    remove(this._popupComponent);\n  }\n\n  resetView() {\n    if (this._viewType !== ViewType.DEFAULT) {\n      this._closeHandler();\n    }\n  }\n\n  _closeHandler(evt) {\n    if (evt) {\n      evt.preventDefault();\n\n      const isEscKey = [`Escape`, `Esc`].includes(evt.key);\n\n      if (evt.key && !isEscKey) {\n        return;\n      }\n    }\n\n    remove(this._popupComponent);\n    this._viewType = ViewType.DEFAULT;\n\n    document.removeEventListener(`keydown`, this._closeHandler);\n  }\n\n  _handleFavoriteClick() {\n    this._changeData(Object.assign({}, this._filmCard, { isFavorite: !this._filmCard.isFavorite }));\n  }\n\n  _handleWatchlistClick() {\n    this._changeData(Object.assign({}, this._filmCard, { isWatchlist: !this._filmCard.isWatchlist }));\n  }\n\n  _handleWatchedClick() {\n    this._changeData(Object.assign({}, this._filmCard, { isWatched: !this._filmCard.isWatched }));\n  }\n\n  _handlePopupClick() {\n    this._popupComponent.updateElement();\n    render(bodyElement, this._popupComponent, RenderPosition.BEFORE_END);\n    this._changeViewType();\n    this._viewType = ViewType.POPUP;\n    document.addEventListener(`keydown`, this._closeHandler);\n  }\n}\n","import ContentContainerView from '../view/container.js';\nimport FilmCardPresenter from './film.js';\nimport SortView from '../view/sort.js';\nimport ButtonShowMoreView from '../view/show-more.js';\n\nimport { render, RenderPosition, remove } from '../utils/render.js';\nimport { sortByDate, sortByRating } from '../utils/film-card.js';\nimport { SortType, UpdateType } from '../const.js';\nconst FILM_CARD_COUNT_PER_STEP = 5;\n// const FILM_EXTRA_CARD_COUNT = 2;\nconst siteMainElement = bodyElement.querySelector(`.main`);\nexport default class MovieList {\n  constructor(contentContainer, filmCardsModel) {\n    this._filmCardsModel = filmCardsModel;\n    this._contentContainer = contentContainer;\n    this._renderedFilmCardCount = FILM_CARD_COUNT_PER_STEP;\n    this._currentSortType = SortType.DEFAULT;\n    this._filmCardPresenter = {};\n\n    this._sortComponent = null;\n    this._buttonShowMoreComponent = null;\n\n    this._contentContainerComponent = new ContentContainerView();\n    // this._buttonShowMoreComponent = new ButtonShowMoreView();\n    this._mainFilmsContainer = this._contentContainerComponent.getElement().querySelector(`.films-list .films-list__container`);\n\n    this._handleViewAction = this._handleViewAction.bind(this);\n    this._handleFilmCardChange = this._handleFilmCardChange.bind(this);\n    this._handleButtonShowMoreClick = this._handleButtonShowMoreClick.bind(this);\n    this._handleTypeViewChange = this._handleTypeViewChange.bind(this);\n\n    this._filmCardsModel.addObserver(this._handleFilmCardChange);\n  }\n\n  init() {\n    render(this._contentContainer, this._contentContainerComponent, RenderPosition.BEFORE_END);\n\n    this._renderContent();\n  }\n\n  _getFilmCards() {\n    switch (this._currentSortType) {\n      case SortType.DATE:\n        return this._filmCardsModel.getFilmCards().slice().sort(sortByDate);\n      case SortType.RATING:\n        return this._filmCardsModel.getFilmCards().slice().sort(sortByRating);\n    }\n\n    return this._filmCardsModel.getFilmCards();\n  }\n\n  _handleTypeViewChange() {\n    Object.values(this._filmCardPresenter).forEach((presenter) => presenter.resetView());\n  }\n\n  _handleFilmCardChange(data, updateType) {\n    switch (updateType) {\n      case UpdateType.PATCH:\n        this._filmCardPresenter[data.id].init(data);\n        break;\n      case UpdateType.MINOR:\n        this._clearContentContainer();\n        this._renderContentContainer();\n        break;\n      case UpdateType.MAJOR:\n        this._clearContentContainer({ resetRenderedFilmCardCount: true, resetSortType: true });\n        this._renderContentContainer();\n        break;\n    }\n  }\n\n  _handleSortTypeChange(sortType) {\n    if (this._currentSortType === sortType) {\n      return;\n    }\n\n    this._currentSortType = sortType;\n    this._clearContentContainer({ resetRenderedFilmCardCount: true });\n    this._renderContentContainer();\n  }\n\n  _renderSort() {\n    if (this._sortComponent !== null) {\n      this._sortComponent = null;\n    }\n\n    this._sortComponent = new SortView(this._currentSortType);\n    this._sortComponent.setSortTypeChangeHandler(this._handleSortTypeChange);\n\n    render(siteMainElement, this._sortComponent, RenderPosition.AFTERBEGIN);\n  }\n\n  _handleViewAction(updateFilmCard) {\n    this._filmCardsModel.updateFilmCards(updateFilmCard);\n  }\n\n  _handleButtonShowMoreClick() {\n    const filmCardCount = this._getFilmCards().length;\n    const newRenderdfilmCardCount = Math.min(filmCardCount, this._renderedFilmCardCount + FILM_CARD_COUNT_PER_STEP);\n    const filmCards = this._getFilmCards().slice(this._renderedFilmCardCount, newRenderdfilmCardCount);\n\n    this._renderFilmCards(filmCards, this._mainFilmsContainer);\n    this._renderedFilmCardCount = newRenderdfilmCardCount;\n\n    if (this._renderedFilmCardCount >= filmCardCount) {\n      remove(this._buttonShowMoreComponent);\n    }\n  }\n\n  _renderFilmCard(filmList, filmCard) {\n    const filmCardPresenter = new FilmCardPresenter(filmList, this._handleViewAction, this._handleTypeViewChange);\n    filmCardPresenter.init(filmCard);\n    this._filmCardPresenter[filmCard.id] = filmCardPresenter;\n  }\n\n  _renderFilmCards(filmCards, filmList) {\n    filmCards.forEach((filmCard) => this._renderFilmCard(filmList, filmCard));\n  }\n\n  _renderButtonShowMore() {\n    if (this._buttonShowMoreComponent !== null) {\n      this._buttonShowMoreComponent = null;\n    }\n\n    this._buttonShowMoreComponent = new ButtonShowMoreView();\n    this._buttonShowMoreComponent.setClickHandler(this._handleButtonShowMoreClick);\n\n    render(filmslist, this._buttonShowMoreComponent, RenderPosition.BEFOREEND);\n  }\n\n  _clearContent() {\n    Object.values(this._filmCardPresenter).forEach((presenter) => presenter.destroy());\n    this._filmCardPresenter = {};\n    this._renderedFilmCardCount = FILM_CARD_COUNT_PER_STEP;\n  }\n\n  _clearContentontener({ resetRenderedFilmCardCount = false, resetSortType = false } = {}) {\n    const filmCardCount = this._getfilmCards().length;\n\n    Object.values(this._filmCardPresenter).forEach((presenter) => presenter.destroy());\n    this._filmCardPresenter = {};\n\n    remove(this._sortComponent);\n    // remove(this._noFilmCardComponent);\n    remove(this._buttonShowMoreComponent);\n\n    if (resetRenderedFilmCardCount) {\n      this._renderedfilmCardCount = FILM_CARD_COUNT_PER_STEP;\n    } else {\n      // На случай, если перерисовка доски вызвана\n      // уменьшением количества задач (например, удаление или перенос в архив)\n      // нужно скорректировать число показанных задач\n      this._renderedfilmCardCount = Math.min(filmCardCount, this._renderedfilmCardCount);\n    }\n\n    if (resetSortType) {\n      this._currentSortType = SortType.DEFAULT;\n    }\n  }\n\n  _renderBoard() {\n    const filmCards = this._getFilmCards();\n\n    const filmCardCount = filmCards.length;\n\n    // if (filmCardCount === 0) {\n    //   this._renderNoTasks();\n    //   return;\n    // }\n\n    this._renderSort();\n\n    // Теперь, когда _renderBoard рендерит доску не только на старте,\n    // но и по ходу работы приложения, нужно заменить\n    // константу TASK_COUNT_PER_STEP на свойство _renderedTaskCount,\n    // чтобы в случае перерисовки сохранить N-показанных карточек\n    this._renderContent(filmCards.slice(0, Math.min(filmCardCount, this._renderedTaskCount)), this._mainFilmsContainer);\n\n    if (filmCardCount > this._renderedfilmCardCount) {\n      this._buttonShowMoreComponent();\n    }\n  }\n\n  // _renderContent() {\n  //   const filmCardCount = this._getFilmCards().length;\n  //   const filmCards = this._getFilmCards().slice(0, Math.min(filmCardCount, FILM_CARD_COUNT_PER_STEP));\n  //   this._renderFilmCards(filmCards, this._mainFilmsContainer);\n\n  //   if (filmCardCount > FILM_CARD_COUNT_PER_STEP) {\n  //     this._renderButtonShowMore();\n  //   }\n  // }\n}\n","export const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.round(lower + Math.random() * (upper - lower));\n};\n","const getWeightForNullDate = (dateA, dateB) => {\n  if (dateA === null && dateB === null) {\n    return 0;\n  }\n\n  if (dateA === null) {\n    return 1;\n  }\n\n  if (dateB === null) {\n    return -1;\n  }\n\n  return null;\n};\n\nexport const sortByDate = (filmCardA, filmCardB) => {\n  const weight = getWeightForNullDate(filmCardA.date, filmCardB.date);\n\n  if (weight !== null) {\n    return weight;\n  }\n\n  return filmCardA.date.getTime() - filmCardB.date.getTime();\n};\n\nexport const sortByRating = (filmCardA, filmCardB) => {\n  const weight = getWeightForNullDate(filmCardA.rating, filmCardB.rating);\n\n  if (weight !== null) {\n    return weight;\n  }\n\n  return filmCardA.rating - filmCardB.rating;\n};\n","export default class Observer {\n  constructor() {\n    this._observers = [];\n  }\n\n  addObserver(observer) {\n    this._observers.push(observer);\n  }\n\n  removeObserver(observer) {\n    this._observers = this._observers.filter((existedObserver) => existedObserver !== observer);\n  }\n\n  _notify(payload, event) {\n    this._observers.forEach((observer) => observer(payload, event));\n  }\n}\n","import Abstract from \"../view/abstract.js\";\n\nexport const RenderPosition = {\n  AFTER_BEGIN: `afterbegin`,\n  BEFORE_END: `beforeend`,\n};\n\nexport const render = (container, child, place) => {\n  if (child instanceof Abstract) {\n    child = child.getElement();\n  }\n\n  switch (place) {\n    case RenderPosition.AFTER_BEGIN:\n      container.prepend(child);\n      break;\n    case RenderPosition.BEFORE_END:\n      container.append(child);\n      break;\n  }\n};\n\nexport const renderTemplate = (container, template, place) => {\n  if (container instanceof Abstract) {\n    container = container.getElement();\n  }\n\n  container.insertAdjacentHTML(place, template);\n};\n\nexport const createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n\n  return newElement.firstChild;\n};\n\nexport const replace = (newChild, oldChild) => {\n  if (oldChild instanceof Abstract) {\n    oldChild = oldChild.getElement();\n  }\n\n  if (newChild instanceof Abstract) {\n    newChild = newChild.getElement();\n  }\n\n  const parent = oldChild.parentElement;\n\n  if (parent === null || oldChild === null || newChild === null) {\n    throw new Error(`Can't replace unexisting elements`);\n  }\n\n  parent.replaceChild(newChild, oldChild);\n};\n\nexport const remove = (component) => {\n  if (!(component instanceof Abstract)) {\n    throw new Error(`Can remove only components`);\n  }\n\n  component.getElement().remove();\n  component.removeElement();\n};\n","import {createElement} from \"../utils/render.js\";\n\nexport default class Abstract {\n  constructor() {\n    if (new.target === Abstract) {\n      throw new Error(`Can't instantiate Abstract, only concrete one.`);\n    }\n\n    this._element = null;\n    this._callback = () => {};\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createContentContainer = () => {\n  return `<section class=\"films\">\n    <section class=\"films-list\">\n      <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n      <div class=\"films-list__container\"></div>\n    </section>\n  \n    <section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">Top rated</h2>\n      <div class=\"films-list__container\"></div>\n    </section>\n  \n    <section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">Most commented</h2>\n      <div class=\"films-list__container\"></div>\n    </section>\n  </section>`;\n};\n\nexport default class ContentContainer extends AbstractView {\n  getTemplate() {\n    return createContentContainer();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst COUNT_SIMBOL_DESCRIPTION = 140;\n\nconst createFilmCard = (filmCard) => {\n  const {poster, name, rating, date, Runtime, genre, description, comments} = filmCard;\n  return `<article class=\"film-card\" >\n    <h3 class=\"film-card__title\">${name}</h3>\n    <p class=\"film-card__rating\">${rating}</p>\n    <p class=\"film-card__info\">\n      <span class=\"film-card__year\">${date.slice(date.length - 5)}</span>\n      <span class=\"film-card__duration\">${Runtime}</span>\n      <span class=\"film-card__genre\">${genre}</span>\n    </p>\n    <img src=${poster} alt=\"\" class=\"film-card__poster\">\n    <p class=\"film-card__description\">${description.length > COUNT_SIMBOL_DESCRIPTION ? description.slice(0, 140) + `...` : description}</p>\n    <a class=\"film-card__comments\">${comments.length} comments</a>\n    <form class=\"film-card__controls\">\n      <button class=\"film-card__controls-item button film-card__controls-item--add-to-watchlist\">Add to watchlist</button>\n      <button class=\"film-card__controls-item button film-card__controls-item--mark-as-watched\">Mark as watched</button>\n      <button class=\"film-card__controls-item button film-card__controls-item--favorite\">Mark as favorite</button>\n    </form>\n  </article>`;\n};\n\nexport default class FilmCard extends AbstractView {\n  constructor(filmCard) {\n    super();\n    this._filmCard = filmCard;\n    this._popupClickHandler = this._popupClickHandler.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n\n  getTemplate() {\n    return createFilmCard(this._filmCard);\n  }\n\n  _popupClickHandler(evt) {\n    evt.preventDefault();\n    const clickControls = [];\n    [`.film-card__title`, `.film-card__comments`, `.film-card__poster`].forEach((value) => {\n      clickControls.push(this.getElement().querySelector(value));\n    });\n\n    if (clickControls.includes(event.target)) {\n      this._callback.popupClick();\n    }\n  }\n\n  setPopupClickHandler(callback) {\n    this._callback.popupClick = callback;\n    this.getElement().addEventListener(`click`, this._popupClickHandler);\n  }\n\n  clickHandler(callback, selector) {\n    this.getElement().querySelector(selector).addEventListener(`click`, callback);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFilterItemTemplate = (filter) => {\n  const {name, count} = filter;\n  return `<a href=\"#${name}\" class=\"main-navigation__item\">${name}<span class=\"main-navigation__item-count\">${count}</span></a>`;\n};\n\nconst createFilterTemplate = (filters) => {\n  const filterItems = filters.map((filter) => createFilterItemTemplate(filter)).join(``);\n  return `<nav class=\"main-navigation\">\n  <div class=\"main-navigation__items\">\n    <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n    ${filterItems}\n    </div>\n    <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n  </nav>`;\n};\n\nexport default class Filter extends AbstractView {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return createFilterTemplate(this._filters);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createFooterStatistics = (filmsCount) => `<p>${filmsCount} movies inside</p>`;\n\nexport default class FooterStatistics extends AbstractView {\n  constructor(filmsCount) {\n    super();\n    this._filmsCount = filmsCount;\n  }\n\n  getTemplate() {\n    return createFooterStatistics(this._filmsCount);\n  }\n}\n","import Smart from \"./smart.js\";\n\nconst generatePopup = (filmCard, start, end) => {\n  return Object.entries(filmCard)\n    .slice(start, end)\n    .map(([detailsItemName, detailsValue]) => {\n      return {\n        detailsItem: detailsItemName === `date` ? `Release Date` : detailsItemName,\n        detailsItemValue: detailsValue,\n      };\n    });\n};\n\nconst createPopupTableItem = (detail) => {\n  const {detailsItem, detailsItemValue} = detail;\n  return ` <tr class=\"film-details__row\">\n  <td class=\"film-details__term\">${detailsItem}</td>\n  <td class=\"film-details__cell\">${detailsItemValue}</td>\n</tr>`;\n};\n\nconst createPopupTable = (detailsTableItems) => {\n  return detailsTableItems.map((detailsTableItem) => createPopupTableItem(detailsTableItem)).join(``);\n};\n\nconst createFilmGenre = (genre) => {\n  const filmGenre = genre.split(` `);\n  return ` <tr class=\"film-details__row\">\n  <td class=\"film-details__term\">${filmGenre.length > 1 ? `Genres` : `Genre`}</td>\n  <td class=\"film-details__cell\">${filmGenre.map((element) => `<span class=\"film-details__genre\">${element}</span>`).join(``)}</td>\n</tr>`;\n};\n\nconst createComment = (comment) => {\n  const {emoji, day, autor, text} = comment;\n  return `<li class=\"film-details__comment\">\n  <span class=\"film-details__comment-emoji\">\n    <img src= ${emoji} width=\"55\" height=\"55\" alt=\"emoji-smile\">\n  </span>\n  <div>\n    <p class=\"film-details__comment-text\">${text}</p>\n    <p class=\"film-details__comment-info\">\n      <span class=\"film-details__comment-author\">${autor}</span>\n      <span class=\"film-details__comment-day\">${day}</span>\n      <button class=\"film-details__comment-delete\">Delete</button>\n    </p>\n  </div>\n</li>`;\n};\n\nconst createComments = (comments) => comments.map((comment) => createComment(comment)).join(``);\n\nconst createPopup = (filmCard) => {\n  const {poster, ageRating, name, originalName, rating, genre, description, comments, emoji} = filmCard;\n  return `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"form-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"${poster}\" alt=\"\">\n    \n              <p class=\"film-details__age\">${ageRating}</p>\n            </div>\n    \n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${name}</h3>\n                  <p class=\"film-details__title-original\">Original: ${originalName}</p>\n                </div>\n    \n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${rating}</p>\n                </div>\n              </div>\n              <table class=\"film-details__table\">\n              ${createPopupTable(generatePopup(filmCard, 4, 10))} \n              ${createFilmGenre(genre)}\n              </table>\n              <p class=\"film-details__film-description\">\n              ${description}\n              </p>\n            </div>\n          </div>\n    \n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\">\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n    \n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\">\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n    \n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\">\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n        </div>\n    \n        <div class=\"form-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n    \n            <ul class=\"film-details__comments-list\">\n            ${createComments(comments)}\n            </ul>\n    \n            <div class=\"film-details__new-comment\">\n              <div for=\"add-emoji\" class=\"film-details__add-emoji-label\">\n              ${emoji !== null ? `<img src=\"../../images/emoji/${emoji}.png\" width=\"100%\" height=\"100%\" alt=\"emoji-smile\"></img>` : ``}\n              </div>\n    \n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n              </label>\n    \n              <div class=\"film-details__emoji-list\">\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                  <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n    \n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                  <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n    \n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n                  <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n    \n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                  <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`;\n};\n\nexport default class Popup extends Smart {\n  constructor(filmCard, changeData) {\n    super();\n    this._data = filmCard;\n    this._changeData = changeData;\n    this._сloseClickHandler = this._сloseClickHandler.bind(this);\n    this._handleFavoriteClick = this._handleFavoriteClick.bind(this);\n    this._handleWatchlistClick = this._handleWatchlistClick.bind(this);\n    this._handleWatchedClick = this._handleWatchedClick.bind(this);\n    this._emojiClickHandler = this._emojiClickHandler.bind(this);\n    this._setInnerHandlers();\n  }\n\n  getTemplate() {\n    return createPopup(this._data);\n  }\n\n  restoreHandlers() {\n    this.setCloseClickHandler(this._callback.popupCloseClick);\n    this.setFavoriteClickHandler(this._callback.favoriteClick);\n    this.setWatchlistClickHandler(this._callback.watchlistClick);\n    this.setWatchedClickHandler(this._callback.watchedClick);\n    this._setInnerHandlers();\n  }\n\n  _setInnerHandlers() {\n    this.getElement().querySelector(`.film-details__emoji-list`).addEventListener(`change`, this._emojiClickHandler);\n  }\n\n  _сloseClickHandler(evt) {\n    this._callback.popupCloseClick(evt);\n  }\n\n  _handleFavoriteClick() {\n    this._callback.favoriteClick();\n  }\n\n  _handleWatchlistClick() {\n    this._callback.watchlistClick();\n  }\n\n  _handleWatchedClick() {\n    this._callback.watchedClick();\n  }\n\n  _emojiClickHandler(evt) {\n    evt.preventDefault();\n    this.updateData({\n      emoji: evt.target.value,\n    });\n  }\n\n  setCloseClickHandler(callback) {\n    this._callback.popupCloseClick = callback;\n    this.getElement().querySelector(`.film-details__close-btn`).addEventListener(`click`, this._сloseClickHandler);\n  }\n\n  setFavoriteClickHandler(callback) {\n    this._callback.favoriteClick = callback;\n    this.getElement().querySelector(`#favorite`).addEventListener(`change`, this._handleFavoriteClick);\n  }\n\n  setWatchlistClickHandler(callback) {\n    this._callback.watchlistClick = callback;\n    this.getElement().querySelector(`#watchlist`).addEventListener(`change`, this._handleWatchlistClick);\n  }\n\n  setWatchedClickHandler(callback) {\n    this._callback.watchedClick = callback;\n    this.getElement().querySelector(`#watched`).addEventListener(`change`, this._handleWatchedClick);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createUserProfile = () => {\n  return `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">Movie Buff</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`;\n};\n\nexport default class UserProfile extends AbstractView {\n  getTemplate() {\n    return createUserProfile();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createButtonShowMore = () => `<button class=\"films-list__show-more\">Show more</button>`;\n\nexport default class ButtonShowMore extends AbstractView {\n  constructor() {\n    super();\n    this._clickHandler = this._clickHandler.bind(this);\n  }\n\n  _clickHandler(evt) {\n    evt.preventDefault();\n    this._callback.click();\n  }\n\n  setClickHandler(callback) {\n    this._callback.click = callback;\n    this.getElement().addEventListener(`click`, this._clickHandler);\n  }\n\n  getTemplate() {\n    return createButtonShowMore();\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nexport default class Smart extends AbstractView {\n  constructor() {\n    super();\n    this._data = {};\n  }\n  updateData(update) {\n    if (!update) {\n      return;\n    }\n\n    this._data = Object.assign(this._data, update);\n\n    this.updateElement();\n  }\n\n  updateElement() {\n    let prevElement = this.getElement();\n    const parent = prevElement.parentElement;\n    this.removeElement();\n\n    const newElement = this.getElement();\n\n    parent.replaceChild(newElement, prevElement);\n    prevElement = null;\n\n    this.restoreHandlers();\n  }\n  restoreHandlers() {\n    throw new Error(`Abstract method not implemented: resetHandlers`);\n  }\n}\n","import AbstractView from \"./abstract.js\";\n\nconst createSortTemplate = () => {\n  return `<ul class=\"sort\">\n      <li><a href=\"#\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n      <li><a href=\"#\" class=\"sort__button\">Sort by date</a></li>\n      <li><a href=\"#\" class=\"sort__button\">Sort by rating</a></li>\n    </ul>`;\n};\n\nexport default class Sort extends AbstractView {\n  getTemplate() {\n    return createSortTemplate();\n  }\n}\n"],"sourceRoot":""}